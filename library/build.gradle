apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'android-aspectjx'

//maven插件
apply plugin: 'maven'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {

        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'org.aspectj:aspectjrt:1.8.14'
    implementation "androidx.startup:startup-runtime:1.0.0"
}

//maven输出路径
uploadArchives {
//    configuration = configurations.archives
    repositories {
        mavenDeployer {
            //snapShot输出地址，　MAVEN_REPO_RELEASE_URL地址在 gradle.properties文件中配置
            snapshotRepository(url: MAVEN_REPO_SNAPSHOT_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            //release输出地址，　MAVEN_REPO_RELEASE_URL地址在 gradle.properties文件中配置
            repository(url: MAVEN_REPO_RELEASE_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            //maven信息
            pom.project {
                //　如果要输出release版本，version为X.X.X(例如：version '1.0.4'),
                // 如果输出snapshot版本，则命名必须为 'XXX-SNAPSHOT',也就是必须要为 `-SNAPSHOT`(例如：version '1.0.4-SNAPSHOT')
                version '1.0.4-SNAPSHOT'
                artifactId 'toastutils-lib'
                groupId GROUP_ID
//                packaging TYPE
//                description DESCRIPTION
            }
        }
    }
}

//artifacts {
//    archives file("$buildDir/outputs/aar/${project.getName()}-release.aar")
//}